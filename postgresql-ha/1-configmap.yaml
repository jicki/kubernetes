apiVersion: v1
kind: ConfigMap
metadata:
  name: pgconf
  namespace: postgresql-ha
  labels:
    app: postgresql
data:
  pg_hba-master.conf: |
    # PostgreSQL Client Authentication Configuration File
    # ===================================================
    # TYPE  DATABASE        USER            ADDRESS                 METHOD
    # "local" is for Unix domain socket connections only
    local   all             all                                     trust
    # IPv4 local connections:
    host    all             all             127.0.0.1/32            trust
    # IPv6 local connections:
    host    all             all             ::1/128                 trust
    # On an uninitialized database, this will populate
    host    all             all             all                     md5
    # replication privilege.
    local   replication     all                                     trust
    host    replication     all             127.0.0.1/32            trust
    host    replication     all             ::1/128                 trust
  pg_hba-slave.conf: |
    # PostgreSQL Client Authentication Configuration File
    # ===================================================
    # TYPE  DATABASE        USER            ADDRESS                 METHOD
    # "local" is for Unix domain socket connections only
    local   all             all                                     trust
    # IPv4 local connections:
    host    all             all             127.0.0.1/32            trust
    # IPv6 local connections:
    host    all             all             ::1/128                 trust
    # On an uninitialized database, this will populate
    host    all             all             all                     md5
  postgresql.conf: |
    # ------------------------------------------------#
    # PostgreSQL configuration file Version to 9.6.16 #
    # ------------------------------------------------#
    
    
    # - 配置文件设置 -
    
    # 数据目录路径
    #data_directory = 'ConfigDir' 
    # 指定 pg_hba.conf 文件路径,默认为 Data 目录下
    hba_file = '/etc/postgresql/conf.d/pg_hba.conf'
    # pg_ident.conf 文件路径
    # ident_file = 'ConfigDir/pg_ident.conf' 
    
    # 指定可被服务器创建的用于管理程序的额外进程ID（PID）文件.
    #external_pid_file = '' 
    
    # - 服务器连接设置 -
    
    # 用于配置监听的连接地址. 默认 * 
    listen_addresses = '*'
    # 修改端口，默认为 5432	
    port = 5432
    # 最大连接数, slave 节点，必须将该参数的值设置为大于等于主节点上的值.
    max_connections = 500
    # 超级用户预留连接数必须小于 max_connections
    superuser_reserved_connections = 10
    # 设置生成 socket 的路径
    #unix_socket_directories = '/var/run/postgresql'
    # 设置 Unix-domain socket所在的操作系统用户组。默认值是空串
    #unix_socket_group = ''
    # 设置 Unix-domain socket的访问权限，默认值是0770
    #unix_socket_permissions = 0777
    # 通过 bonjour 广播服务器
    #bonjour = off
    # bonjour 广播名称
    #bonjour_name = ''
    
    # - 安全认证设置 -
    
    # 客户端连接时的认证时间, 超过时间未认证 客户端连接会被拒绝
    #authentication_timeout = 1min
    # 是否启用 ssl 认证连接
    #ssl = off
    # 指定 ssl 加密算法
    #ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers
    
    #ssl_prefer_server_ciphers = on	
    #ssl_ecdh_curve = 'prime256v1'
    #ssl_cert_file = 'server.crt'
    #ssl_key_file = 'server.key'
    #ssl_ca_file = ''
    #ssl_crl_file = ''
    #password_encryption = on
    #db_user_namespace = off
    #row_security = on
    
    # GSSAPI using Kerberos
    #krb_server_keyfile = ''
    #krb_caseins_users = off
    
    # - TCP Keepalives -
    
    # 设置TCP套接字的 TCP_KEEPIDLE 属性, 0 为使用操作系统的值.
    #tcp_keepalives_idle = 0
    # 设置TCP套接字的 TCP_KEEPINTVL 属性, 0 为使用操作系统的值.
    #tcp_keepalives_interval = 0
    # 设置TCP套接字的 TCP_KEEPCNT 属性, 0 为使用操作系统的值.
    #tcp_keepalives_count = 0
    
    # - 内存相关设置 -
    
    # 表示数据缓冲区中的数据块的个数, 每个数据块的大小是 8KB.
    # 大约可以设置为系统内存的 25% ,增大 buffers 通常也需要增大 max_wal_size. 
    shared_buffers = 256MB
    # 启用/禁用 巨型内存页面, 默认为 try , 服务器将 尝试使用巨型页面.
    #huge_pages = try
    # 设置每个数据库会话使用的临时缓冲区的最大数目, 用于访问临时表.
    #temp_buffers = 8MB
    # 设置可以同时处于 "prepared" 状态的事务的最大数目把这个参数设置 0 为禁用预备事务特性.
    #max_prepared_transactions = 0
    
    # 数据库的排序操作和哈希表使用的内存缓冲区的大小.
    #work_mem = 4MB
    # 数据库的维护操作使用的内存空间的大小.
    #maintenance_work_mem = 64MB
    # 对头扫描的N条记录使用selection排序, N = work_mem 与 replacement_sort_tuples, 提升排序的效率.
    #replacement_sort_tuples = 150000
    # 设置每个自动清理进程能使用的最大内存量
    #autovacuum_work_mem = -1
    # 服务器的执行堆栈的最大安全深度, 服务器运行的STACK大小如果超过max_stack_depth，会自动终止当前事务.
    #max_stack_depth = 2MB			# min 100kB
    # 服务器应该使用的动态共享内存类型, 支持 posix, sysv, windows, mmap, 空为禁止.
    dynamic_shared_memory_type = posix
    
    
    # - 磁盘相关设置 -
    
    # 每个会话的临时文件空间(kb),-1 表示无限制
    #temp_file_limit = -1
    
    
    # - 内核相关设置 -
    
    # 设置每个服务器子进程允许同时打开的最大文件数目
    #max_files_per_process = 1000
    # 指定一个或者多个要在服务器启动时预载入的共享库
    #shared_preload_libraries = ''
    
    # - 垃圾回收设置 -
    
    # 它决定执行 VACUUM 和 ANALYZE 命令的进程的睡眠时间. 设置为10的整数
    #vacuum_cost_delay = 0
    # 表示锁住缓冲池，查找共享的散列表以及扫描页面的内容的开销.
    #vacuum_cost_page_hit = 1
    # 它表示锁住缓冲池、查找共享哈希表、从磁盘读取需要的块以及扫描其内容的开销.
    #vacuum_cost_page_miss = 10
    # 它表示再次把脏块刷出到磁盘所需要的额外I/O.
    #vacuum_cost_page_dirty = 20
    # 它表示导致清理进程休眠的积累开销.
    #vacuum_cost_limit = 200
    
    # - 后台写数据进程 -
    
    # 它决定后台写数据库进程的睡眠时间
    #bgwriter_delay = 200ms
    # 后台写数据库进程每次写脏数据块时，写到外部文件中的脏数据块的个数不能超过设置值.
    #bgwriter_lru_maxpages = 100
    # 它决定后台写数据库进程每次写物理文件时，写到外部文件中的脏数据块的个数.
    #bgwriter_lru_multiplier = 2.0
    # 进程写脏数据块量超过配置阈值时，触发调用系统 sync_file_range，告诉系统 backend flush 线程异步刷盘.
    #bgwriter_flush_after = 512kB
    
    # - 异步操作相关配置 -
    
    # 设置 PostgreSQL 可以同时被执行的并发磁盘 I/O 操作的数量, 0 为禁用.
    #effective_io_concurrency = 1
    # 设置系统能够支持的后台进程的最大数量
    #max_worker_processes = 8
    # 设置后台并行查询的线程数量
    #max_parallel_workers_per_gather = 0
    # 设置旧快照的生存时间, -1 为关闭
    #old_snapshot_threshold = -1
    # 当后台线程 脏数据超过配置阈值时, 触发调用系统 sync_file_range，告诉系统 backend flush 线程异步刷盘.
    #backend_flush_after = 0
    
    
    # - 预写日志相关配置 -
    
    # 配置 预写日志模式, 支持 minimal, replica, logical
    wal_level = replica
    # 设置同步方式, 服务器将尝试确保更新被写入到磁盘
    #fsync = on
    # 是否开启异步提交, 如果磁盘的IOPS一般，建议使用异步提交来提高性能, 但是数据库出错会导致数据丢失.
    #synchronous_commit = on
    # 配置强制 WAL 更新到磁盘的方法. fsync 为关闭.
    #wal_sync_method = fsync
    # 服务器在checkpoint之后在对页面的第一次写时将整个页面写到wal里面.
    full_page_writes = on
    # 是否开启服务器压缩完整页面图片到WAL中. 在WAL回放中解压压缩的页面图片.
    #wal_compression = off
    # 服务器一个检查点之后页面被第一次修改期间把该磁盘页面的整个内容都写入 WAL 中.
    wal_log_hints = on
    # 用于还未写入磁盘的 WAL 数据的共享内存量 -1 为 shared_buffers 的 1/32 . 
    #wal_buffers = -1
    # 指定写入器将 WAL 刷到磁盘的时间间隔.
    #wal_writer_delay = 200ms
    # 指定写入器达到指定数量时刷到磁盘. 默认1MB , 0为立刻刷到磁盘.
    #wal_writer_flush_after = 1MB
    # 设定事务在发出提交命令以后的睡眠时间.只有休眠指定时间后事物才会被真正提交.
    #commit_delay = 0
    # 数据库中正在执行的事务的个数大于或等于指定数, 则触发 commit_delay 提交间隔.
    #commit_siblings = 5
    
    # - 检查点相关设置 -
    
    # 设置 自动 WAL 检查点之间的最长时间.
    #checkpoint_timeout = 5min
    # 自动 WAL 检查点使得 WAL 增长到最大尺寸.
    #max_wal_size = 1GB
    # 只要 WAL 磁盘使用率低于这个设置，旧的 WAL 文件总数被回收，以供将来检查点使用.
    #min_wal_size = 80MB
    # 控制检查点操作的执行时间.
    #checkpoint_completion_target = 0.5
    # 当检查点超过设置数量时, 触发调用系统 sync_file_range，告诉系统 backend flush 线程异步刷盘
    #checkpoint_flush_after = 256kB
    # 设置检查点的实际发生时间, 小于该值, 将会在日志文件里写入相关记录. 0 为关闭记录.
    #checkpoint_warning = 30s
    
    # - 归档相关设置 -
    
    # 配置是否打开归档模式, 归档模式与流式复制没有关系.
    archive_mode = on
    # 配置 WAL 归档日志存放的路径 手动触发归档 select pg_switch_xlog();
    archive_command = 'DIR=/var/lib/postgresql/data/pgdata/pg_archive/`date +%F`; test ! -d $DIR && mkdir -p $DIR; test ! -f $DIR/%f && cp %p $DIR/%f'
    # 配置事物文件 WAL 在指定的时间内切换到一个新的 WAL 事物文件中. 0 为关闭
    #archive_timeout = 0
    
    
    #------------------------------------------------------------------------------
    # 复制同步相关设置
    #------------------------------------------------------------------------------
    
    # - 发送服务相关配置 -
    
    # Set these on the master and on any standby that will send replication data.
    
    # slave 客户端的并发连接的最大数量（即同时运行 WAL发送进程 的最大数）， 0 为禁用复制.
    max_wal_senders = 32
    # 流复制的情况下，pg_xlog 目录下所能保留的过去日志文件段的最小数目.
    #wal_keep_segments = 0
    # 断开停止活动超过指定毫秒数的复制连接.
    wal_sender_timeout = 60s
    # 支持的复制槽最大数量
    #max_replication_slots = 0
    # 是否记录事务提交时间
    #track_commit_timestamp = off
    
    # - Master Server -
    
    # These settings are ignored on a standby server.
    
    # 同步复制模式的 slave 服务器名称, 同步复制模式必须填写. 可以设置为 * .
    #synchronous_standby_names = ''
    # 延迟指定时间 清理删除的元组.
    #vacuum_defer_cleanup_age = 0
    
    # - Slave Servers -
    
    # These settings are ignored on a master server.
    
    # 在恢复归档期间是否支持只读操作.设置为 on 从库为只读模式
    hot_standby = on
    # 归档读取模式下 参数决定取消与应用的WAL项冲突的备用查询之前，备用服务器应等待多久.
    #max_standby_archive_delay = 30s
    # 流复制读取模式下 参数决定取消与应用的WAL项冲突的备用查询之前，备用服务器应等待多久.
    max_standby_streaming_delay = 30s
    # 指定在 slave 上的 WAL 接收者进程向主服务器或上游 slave 发送有关复制进度的信息的最小频度.
    wal_receiver_status_interval = 10s
    # 指定一个 slave 是否将会向主服务器或上游 slave 发送有关于 slave 上当前正被执行的查询的反馈.
    hot_standby_feedback = on
    # 中止处于非活动状态超过指定毫秒数的复制链接.
    #wal_receiver_timeout = 60s
    # 指定等待服务器应等待多长时间.
    #wal_retrieve_retry_interval = 5s
    
    
    #------------------------------------------------------------------------------
    # QUERY TUNING
    #------------------------------------------------------------------------------
    
    # - 规划器方法配置 -
    
    # 允许或禁止查询规划器使用位图扫描计划类型.
    #enable_bitmapscan = on
    # 允许或禁用查询规划器使用哈希聚集计划类型.
    #enable_hashagg = on
    # 允许或禁止查询规划器使用哈希连接计划类型.
    #enable_hashjoin = on
    # 允许或禁止查询规划器使用索引扫描计划类型.
    #enable_indexscan = on
    # 允许或禁止查询规划器使用只用索引扫描计划类型.
    #enable_indexonlyscan = on
    # 允许或者禁止查询规划器使用物化.
    #enable_material = on
    # 允许或禁止查询规划器使用归并连接计划类型.
    #enable_mergejoin = on
    # 允许或禁止查询规划器使用嵌套循环连接计划.
    #enable_nestloop = on
    # 允许或禁止查询规划器使用顺序扫描计划类型.
    #enable_seqscan = on
    # 允许或禁止查询规划器使用显式排序步骤.
    #enable_sort = on
    # 允许或禁止查询规划器使用TID扫描计划类型.
    #enable_tidscan = on
    
    # - 规划器代价常量 -
    
    # 设置规划器计算一次顺序磁盘页面抓取的开销
    #seq_page_cost = 1.0
    # 设置规划器对一次非顺序获取磁盘页面的代价估计
    #random_page_cost = 4.0
    # 设置规划器对一次查询中处理每一行的代价估计
    #cpu_tuple_cost = 0.01
    # 设置规划器对一次索引扫描中处理每一个索引项的代价估计
    #cpu_index_tuple_cost = 0.005
    # 设置规划器对于一次查询中处理每个操作符或函数的代价估计
    #cpu_operator_cost = 0.0025
    # 设置规划器对于从一个并行工作者进程传递一个元组给另一个进程的代价估计
    #parallel_tuple_cost = 0.1
    # 设置规划器对启动并行工作者进程的代价估计
    #parallel_setup_cost = 1000.0
    # 设置启用并行查询的最小数据表的大小
    #min_parallel_relation_size = 8MB
    # 提供可用于磁盘高速缓存的内存量的估计值
    #effective_cache_size = 4GB
    
    # - Genetic 查询优化 -
    
    # 允许或禁止遗传查询优化
    #geqo = on
    # 设置当 FROM 项数量为指定数量时, 才使用遗传查询优化
    #geqo_threshold = 12
    # 控制 GEQO 里规划时间和查询规划的有效性之间的平衡
    #geqo_effort = 5
    # 控制 GEQO 使用的池数量，它就是遗传种群中的个体数目
    #geqo_pool_size = 0
    # 控制 GEQO 使用的子代数目, 子代的意思是算法的迭代次数
    #geqo_generations = 0
    # 控制 GEQO 使用的选择偏好, 选择偏好是种群中的选择压力
    #geqo_selection_bias = 2.0
    # 控制 GEQO 使用的随机数生成器的初始值，随机数生成器用于在连接顺序搜索空间中选择随机路径
    #geqo_seed = 0.0
    
    # - 其他规划器选项 -
    
    # 为没有通过ALTER TABLE SET STATISTICS设置列相关目标的表列设置默认统计目标
    #default_statistics_target = 100
    # 约束检测 partition 它通常被用于继承和分区表来提高性能
    # 当对一个特定表允许这个参数，规划器比较查询条件和表的CHECK约束，并且忽略那些条件违反约束的表扫描
    #constraint_exclusion = partition
    # 设置规划器对将被检索的一个游标的行的比例的估计
    #cursor_tuple_fraction = 0.1
    # 如果生成的FROM列表不超过设置项，规划器将把子查询融合到上层查询
    #from_collapse_limit = 8
    # 如果得出的列表中不超过设置项，那么规划器将把显式JOIN结构重写到 FROM项列表中
    #join_collapse_limit = 8
    # 是否允许为测试目的使用并行查询，即便是并不期望在性能上得到效益
    #force_parallel_mode = off
    
    
    #------------------------------------------------------------------------------
    # ERROR REPORTING AND LOGGING
    #------------------------------------------------------------------------------
    
    # - Where to Log -
    
    # 日志记录方式, 支持 stderr, csvlog, syslog, and eventlog
    log_destination = 'stderr'
    
    # This is used when logging to stderr:
    # 启用日志收集器, 用户 stderr 模式下 捕捉被发送到stderr的日志消息的后台进程
    logging_collector = on
    
    # These are only used if logging_collector is on:
    # 日志文件记录路径, 如果指定 postgresql.conf 文件必须配置绝对路径
    log_directory = 'pg_log'
    # 设置日志文件名字 postgresql-%Y-%m-%d_%H%M%S.log
    log_filename = 'postgresql-%w.log'
    # 日志文件的权限
    #log_file_mode = 0600
    # 是否清除日志文件
    log_truncate_on_rotation = on
    # 当 log_truncate_on_rotation 为on时 生效, 表示指定时间清除日志
    log_rotation_age = 7d
    # 当 log_truncate_on_rotation 为on时 生效, 表示指定大小时清理日志 0 为禁止
    log_rotation_size = 0
    
    # These are relevant when logging to syslog:
    # 当 log_destination = syslog 时如下配置生效
    # 配置 syslog 使用的设备.
    #syslog_facility = 'LOCAL0'
    # 参数决定用来标识syslog中的PostgreSQL消息的程序名
    #syslog_ident = 'postgres'
    # 配置 syslog 记录日志时每个消息会增加一个自增长的序号做为前缀
    #syslog_sequence_numbers = on
    # 配置 syslog 是否切割日志消息
    #syslog_split_messages = on
    
    # This is only relevant when logging to eventlog (win32):
    # (change requires restart)
    #event_source = 'PostgreSQL'
    
    # - When to Log -
    
    # 设置日志级别
    log_min_messages = info
    					#   debug5
    					#   debug4
    					#   debug3
    					#   debug2
    					#   debug1
    					#   info
    					#   notice
    					#   warning
    					#   error
    					#   log
    					#   fatal
    					#   panic
    
    # 设置错误日志级别
    #log_min_error_statement = error
    					#   debug5
    					#   debug4
    					#   debug3
    					#   debug2
    					#   debug1
    					#   info
    					#   notice
    					#   warning
    					#   error
    					#   log
    					#   fatal
    					#   panic (effectively off)
    
    # 记录每一个指定完成语句的持续时间 -1 为 关闭
    #log_min_duration_statement = -1
    
    
    # - What to Log -
    
    # debug 调试模式
    #debug_print_parse = off
    #debug_print_rewritten = off
    #debug_print_plan = off
    #debug_pretty_print = on
    # 是否开启导致检查点和重启点被记录在服务器日志中
    log_checkpoints = on
    # 是否开启导致每一次尝试对服务器的连接被记录，客户端认证的成功完成也会被记录
    log_connections = on
    # 是否开启记录会话终止原因, 以及会话持续时间
    log_disconnections = on
    # 是否开启导致每一个完成的语句的持续时间被记录
    #log_duration = off
    # 控制为每一个被记录的消息要写入到服务器日志的细节量
    #log_error_verbosity = default
    # 是否开启记录连接的 hostname, 默认只记录 IP地址
    #log_hostname = off
    # 日志信息格式化
    log_line_prefix = '%m %p %u %d %r'
    					#   %a = application name
    					#   %u = user name
    					#   %d = database name
    					#   %r = remote host and port
    					#   %h = remote host
    					#   %p = process ID
    					#   %t = timestamp without milliseconds
    					#   %m = timestamp with milliseconds
    					#   %n = timestamp with milliseconds (as a Unix epoch)
    					#   %i = command tag
    					#   %e = SQL state
    					#   %c = session ID
    					#   %l = session line number
    					#   %s = session start timestamp
    					#   %v = virtual transaction ID
    					#   %x = transaction ID (0 if none)
    					#   %q = stop here in non-session
    					#        processes
    					#   %% = '%'
    					# e.g. '<%u%%%d> '
    
    # 当一个会话为获得一个锁等到超过deadlock_timeout时，是否要产生一个日志消息
    log_lock_waits = on
    # 控制哪些SQL语句被记录到日志 none 为关闭
    log_statement = 'none'			# none, ddl, mod, all
    # 是否开启每个复制命令记录在日志中
    #log_replication_commands = off
    # 控制记录临时文件名和尺寸 -1 为关闭
    #log_temp_files = -1
    # 设置在服务器日志中写入的时间戳的时区
    log_timezone = 'Asia/Shanghai'
    
    
    # - Process Title -
    
    # 设置出现在集群中的所有进程标题中的集群名称
    #cluster_name = ''
    # 启用更新进程标题的特性，这个特性在每次服务器接收到一个新SQL命令时都会更新进程的标题
    #update_process_title = on
    
    
    #------------------------------------------------------------------------------
    # RUNTIME STATISTICS
    #------------------------------------------------------------------------------
    
    # - 查询和索引统计收集器 -
    
    # 是否对每个会话的当前执行命令的信息收集，还有命令开始执行的时间
    #track_activities = on
    # 是否在数据库活动上的统计收集
    #track_counts = on
    # 是否对系统 I/O 调用的统计收集
    #track_io_timing = off
    # 是否跟踪函数调用计数和用时 none 为关闭
    #track_functions = none
    # 指定跟踪每个活动会话当前执行命令所保留的字节数
    #track_activity_query_size = 1024
    # 设置存储临时统计数据的目录,默认在 data 目录下
    #stats_temp_directory = 'pg_stat_tmp'
    
    
    # - 统计监控 -
    
    # 对每个查询，向服务器日志里输出相应模块的性能统计
    #log_parser_stats = off
    #log_planner_stats = off
    #log_executor_stats = off
    #log_statement_stats = off
    
    
    #------------------------------------------------------------------------------
    # AUTOVACUUM PARAMETERS
    #------------------------------------------------------------------------------
    
    # 控制服务器是否运行自动清理启动器后台进程,需要同时开启 track_counts
    #autovacuum = on
    # 是否规定时长内未完成的vacuum予以记录日志 -1 为关闭
    #log_autovacuum_min_duration = -1
    # 自动清理进程的最大线程数
    #autovacuum_max_workers = 3
    # 两次自动清理的时间间隔
    #autovacuum_naptime = 1min
    # 某表DML操作达到指定的最小行数则执行自动清理
    #autovacuum_vacuum_threshold = 50
    # 激活自动analyze操作的最小行数
    #autovacuum_analyze_threshold = 50
    # 自动清理的清理操作所需的变更量阈值
    #autovacuum_vacuum_scale_factor = 0.2
    # 自动清理的analyze操作所需的变更量阈值
    #autovacuum_analyze_scale_factor = 0.1
    # 某表的pg_class.relfrozenxid的最大值，如果超出此值则重置 XID
    #autovacuum_freeze_max_age = 200000000
    # 某表的pg_class.relminmxid的最大值, 如果超出此值则重置 XID
    #autovacuum_multixact_freeze_max_age = 400000000
    # 运行一次自动清理操作的时长，如果超过此值则休眠然后再进行清理操作
    #autovacuum_vacuum_cost_delay = 20ms
    # 自动清理操作中的限制时间, -1 既使用 autovacuum_vacuum_cost_delay 的值
    #autovacuum_vacuum_cost_limit = -1
    
    
    #------------------------------------------------------------------------------
    # CLIENT CONNECTION DEFAULTS
    #------------------------------------------------------------------------------
    
    # - SQL 语句行为 -
    
    # 控制被发送给客户端的消息级别
    #client_min_messages = notice
    					#   debug5
    					#   debug4
    					#   debug3
    					#   debug2
    					#   debug1
    					#   log
    					#   notice
    					#   warning
    					#   error
    
    # 指定当一个对象被用一个无模式限定的简单名称引用时，用于进行搜索该对象的模式顺序
    #search_path = '"$user", public'
    # 指定当一个CREATE命令没有显式指定一个表空间时，创建对象（表和索引）的默认表空间
    #default_tablespace = ''
    # 指定当一个CREATE命令没有显式指定一个表空间时，创建临时对象（临时表和临时表上的索引）的默认表空间
    #temp_tablespaces = ''
    # 设置为 OFF 则禁用CREATE FUNCTION期间对函数体字符串的验证.
    #check_function_bodies = on
    # 控制每个新事务的默认隔离级别 默认为 读已提交
    #default_transaction_isolation = 'read committed'
    # 控制每个新事务的默认只读状态 
    #default_transaction_read_only = off
    # 控制每个新事务的默认可延迟状态
    #default_transaction_deferrable = off
    # 当前会话控制复制相关的触发器和规则的触发
    #session_replication_role = 'origin'
    # 中止任何使用了超过指定毫秒数的语句
    #statement_timeout = 0
    # 语句在试图获取表、索引、行或其他数据库对象上的锁时等待超过指定的毫秒数,该语句将被中止
    #lock_timeout = 0
    # 设置 idle in transaction 空闲事物的超时时间
    #idle_in_transaction_session_timeout = 0
    # 每次清理操作时,行事务id大于这个数字的时候,都会被设置 freeze
    #vacuum_freeze_min_age = 50000000
    #vacuum_freeze_table_age = 150000000
    #vacuum_multixact_freeze_min_age = 5000000
    #vacuum_multixact_freeze_table_age = 150000000
    # 设置bytea类型值的输出格式.可选 hex 和 escape
    #bytea_output = 'hex'
    # 设置二进制值如何被编码为XML.
    #xmlbinary = 'base64'
    # 当在XML和字符串值之间进行转换时的方式
    #xmloption = 'content'
    # GIN 索引返回的集合尺寸的软上限.
    #gin_fuzzy_search_limit = 0
    # 当启用 fastupdate 时，设置正在使用的GIN挂起列表的最大尺寸.
    #gin_pending_list_limit = 4MB
    
    # - 区域和格式化 -
    
    # 格式化日期的输出
    datestyle = 'iso, ymd'
    # 设置间隔值的显示格式. postgres - 将产生匹配PostgreSQL发行 8.4之前的输出
    #intervalstyle = 'postgres'
    # 设置用于显示和解释时间戳的时区. 内建默认值是GMT.
    timezone = 'Asia/Shanghai'
    # 设置服务器接受的日期时间输入中使用的时区缩写集合
    #timezone_abbreviations = 'Default'
    # 浮点值显示位数，包括float4、float8以及几何数据类型
    #extra_float_digits = 0
    # 设置客户端编码（字符集）. 默认使用数据库编码
    #client_encoding = sql_ascii
    
    # 设置消息显示的语言. 可接受的值是系统相关的, 系统没有程序会报错.
    lc_messages = 'en_US.UTF-8'
    # 设置用于格式化货币量的区域语言
    lc_monetary = 'en_US.UTF-8'
    # 设置用于格式化数字的区域语言
    lc_numeric = 'en_US.UTF-8'
    # 设置用于格式化日期和时间的区域语言
    lc_time = 'en_US.UTF-8'
    
    # 选择被那些没有显式参数指定配置的文本搜索函数变体使用的文本语言
    default_text_search_config = 'pg_catalog.english'
    
    # - 其他配置 -
    
    # 动态装载的模块
    #dynamic_library_path = '$libdir'
    # 指定一个或者多个要在连接开始时预载入的共享库
    #local_preload_libraries = ''
    # 指定一个或者多个要在连接开始时预载入的共享库
    #session_preload_libraries = ''
    
    
    #------------------------------------------------------------------------------
    # 锁 管理
    #------------------------------------------------------------------------------
    
    # 进行死锁检测之前在一个锁上等待的总时间
    #deadlock_timeout = 1s
    # 控制为每个事务分配的对象锁的平均数量
    #max_locks_per_transaction = 64
    # 共享谓词锁表跟踪
    #max_pred_locks_per_transaction = 64
    
    
    #------------------------------------------------------------------------------
    # 版本 和 平台兼容性
    #------------------------------------------------------------------------------
    
    # - Previous PostgreSQL Versions -
    
    # 控制数组输入解析器是否把未用引号的NULL识别为一个空数组元素
    #array_nulls = on
    # 控制字符串文本中的单引号是否能够用 \' 来表示
    #backslash_quote = safe_encoding
    # 控制 CREATE TABLE和CREATE TABLE AS在没有指定WITH OIDS和WITHOUT OIDS的情况下, 是否在表中包含 OID 列
    #default_with_oids = off
    # 控制 在普通字符串文本中 出现 \ 是否发出警告
    #escape_string_warning = on
    # 控制 是否禁用新(9.0版本后)的权限检查，以与以前的版本兼容.
    #lo_compat_privileges = off
    # 控制 解析器是否为了可能修改的任何结构发出警告
    #operator_precedence_warning = off
    # 当数据库产生 SQL 时，强制所有标识符被引号包围，即使它们不是关键字
    #quote_all_identifiers = off
    # 控制未修饰的表引用是否被视作要包括继承的子表
    #sql_inheritance = on
    # 控制普通字符串文本是否按照 SQL 标准把反斜线当普通文本
    #standard_conforming_strings = on
    # 对大型表的顺序扫描与其他扫描同步，因此并发扫描可以在几乎相同的时刻读取相同的块，这样可以分担 I/O 负载
    #synchronize_seqscans = on
    
    # - 平台和客户端兼容性 -
    
    # 是否让 expr 得出空值值则返回真，否则返回假
    #transform_null_equals = off
    
    
    #------------------------------------------------------------------------------
    # 错误处理
    #------------------------------------------------------------------------------
    
    # 严谨模式 任何错误将中止当前会话.
    #exit_on_error = off
    # PostgreSQL 将在一次后端崩溃后自动重新初始化 crash
    #restart_after_crash = on
    # 设置为 false 时 PostgreSQL 把修改的数据文件刷新到文件系统失败，将引发PANIC级错误, 服务器崩溃.
    #data_sync_retry = off
    
    
    #------------------------------------------------------------------------------
    # 配置文件管理
    #------------------------------------------------------------------------------
    
    # These options allow settings to be loaded from files other than the
    # default postgresql.conf.  Note that these are directives, not variable
    # assignments, so they can usefully be given more than once.
    
    # 设置配置文件引入的目录 如 conf.d , 以 .conf 为后缀
    #include_dir = '...'
    # 当配置文件 include 引入失败时, 只记录错误信息
    #include_if_exists = '...'
    # 引入一个指定的配置文件
    #include = '...'
    
    
    #------------------------------------------------------------------------------
    # 自定义的配置项
    #------------------------------------------------------------------------------
    
    # Add settings for extensions here

